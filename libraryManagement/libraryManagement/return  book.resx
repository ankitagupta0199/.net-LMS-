<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        IiIAiIgCIiA//9k=
</value>
  </data>
</root>